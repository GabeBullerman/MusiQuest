package musiquest.StudentUser;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.Optional;

@RestController
@RequestMapping("/studentuser")
public class StudentController {

	@Autowired
    private StudentUserRepository StudentuserRepository;


    private String success = "{\"message\":\"success\"}";
    public String failure = "{\"message\":\"failure\"}";

<<<<<<< HEAD
    @GetMapping(path = "/getallusers")
=======
    @GetMapping(path = "/studentuser")
>>>>>>> 6d09196eae5c192d7754edfd90cf3a6db139364a
    List<StudentUser> getAllUsers(){
        return StudentuserRepository.findAll();
    }

<<<<<<< HEAD
    @GetMapping(path = "/{id}")
=======
    @GetMapping(path = "/studentuser/{id}")
>>>>>>> 6d09196eae5c192d7754edfd90cf3a6db139364a
    StudentUser getUserById( @PathVariable int id){
        return StudentuserRepository.findById(id);
    }

<<<<<<< HEAD
    @PostMapping(path = "/createuser")
=======
    @PostMapping(path = "/studentuser")
>>>>>>> 6d09196eae5c192d7754edfd90cf3a6db139364a
	public String createUser(@RequestBody StudentUser user){
        if (user == null)
            return failure;
        StudentuserRepository.save(user);
        return success;
    }

<<<<<<< HEAD
    @PutMapping("/updateuser/{id}")
=======
    @PutMapping("/studentuser/{id}")
>>>>>>> 6d09196eae5c192d7754edfd90cf3a6db139364a
    StudentUser updateUser(@PathVariable int id, @RequestBody StudentUser request){
    	StudentUser user = StudentuserRepository.findById(id);
        if(user == null)
            return null;
        StudentuserRepository.save(request);
        return StudentuserRepository.findById(id);
    }
	

}
