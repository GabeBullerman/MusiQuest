package musiquest.TeacherUser;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import musiquest.Course.Course;

import java.util.Optional;

@RestController
@RequestMapping("/teacheruser")
public class TeacherController {
	
	@Autowired
    private TeacherUserRepository TeacheruserRepository;


    private String success = "{\"message\":\"success\"}";
    public String failure = "{\"message\":\"failure\"}";

<<<<<<< HEAD
    @GetMapping(path = "/getallusers")
=======
    @GetMapping(path = "/teacheruser")
>>>>>>> 6d09196eae5c192d7754edfd90cf3a6db139364a
    List<TeacherUser> getAllUsers(){
        return TeacheruserRepository.findAll();
    }

<<<<<<< HEAD
    @GetMapping(path = "/{id}")
=======
    @GetMapping(path = "/teacheruser/{id}")
>>>>>>> 6d09196eae5c192d7754edfd90cf3a6db139364a
    TeacherUser getUserById( @PathVariable int id){
        return TeacheruserRepository.findById(id);
    }

<<<<<<< HEAD
    @PostMapping(path = "/createuser")
=======
    @PostMapping(path = "/teacheruser")
>>>>>>> 6d09196eae5c192d7754edfd90cf3a6db139364a
	public String createUser(@RequestBody TeacherUser user){
        if (user == null)
            return failure;
        TeacheruserRepository.save(user);
        return success;
    }

<<<<<<< HEAD
    @PutMapping(path = "/updateuser/{id}")
=======
    @PutMapping("/teacheruser/{id}")
>>>>>>> 6d09196eae5c192d7754edfd90cf3a6db139364a
    TeacherUser updateUser(@PathVariable int id, @RequestBody TeacherUser request){
    	TeacherUser user = TeacheruserRepository.findById(id);
        if(user == null)
            return null;
        TeacheruserRepository.save(request);
        return TeacheruserRepository.findById(id);
    }
    
    @PutMapping(path = "/createcourse")
    String createCourse(@PathVariable int id) {
    	TeacherUser user = TeacheruserRepository.findById(id);
    	user.createCourse(new Course(user));
    	return success;
    }
    
    
	

}
